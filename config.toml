# Config schema version. DO NOT TOUCH!
# The config upgrader/migrator system will update this automatically as necessary.
version = 11

[telegram]
# Client API ID used for authentication, obtained from https://my.telegram.org/apps
api_id = 1375749

# Client API hash used for authentication, obtained from https://my.telegram.org/apps
api_hash = "0a86988cc23f9f74219aa72e481d3ea7"

# Session name, used by Telethon for saving login details and caching entities
# Filename on disk would be "main.session" (and "main.session-journal" while running)
# This can be set to any valid filename and is useful for running on multiple accounts
session_name = "main"

[bot]
# Default command prefix
# This is prepended to command names to invoke the command, e.g. ".help" if the prefix is "."
default_prefix = "."

# Path to the LevelDB database used for storing settings and other data
# Note that this is a *directory*, not a file
# This will be created during startup if it doesn't already exist
db_path = "main.db"

# Whether to report errors to the bot creator's centralized Sentry dashboard
# This is strongly recommended to help improve the bot's stability for everyone,
# but you're free to disable it if you're uncomfortable with the prospect of
# sending such data to a third-party service.
# PLEASE DISABLE THIS IF YOU ARE TESTING/USING CUSTOM MODIFICATIONS! You're free
# to modify the bot as you wish, but please do not spam me with errors caused
# by your modifications.
report_errors = true

# Whether to send your account's username (if any) along with automatic error reports.
# This will help the bot creator follow up on issues you encounter but is
# disabled by default amid widespread privacy concerns around such practices.
# No effect if report_errors is disabled.
report_username = false

# The DSN to pass to the Sentry SDK for error reporting.
# Leave empty to use the default one, which is controlled by the bot's creator and
# helps improve the bot's stability for everyone by crowd-sourcing errors.
# It is highly recommended to leave this alone unless you have good reason not to.
sentry_dsn = ""

# How the bot responds to commands.
# Valid options: edit, reply, repost
response_mode = "edit"

# How the bot handles responses too long for one message by default.
# Note that this can be overridden on a per-command basis.
# Valid options: split, truncate
overflow_mode = "truncate"

# Maximum number of pages per message before truncation takes place.
# Only applicable if the overflow mode is "split".
# This is a sanity check to prevent abnormally long messages from making the bot spam
# and potentially getting your account banned/limited.
overflow_page_limit = 4

# Whether to redact sensitive information from messages the bot sends/responds to.
# "Sensitive information" is defined as the Telegram API ID and hash as well as the
# account's phone number.
redact_responses = true

[asyncio]
# Whether to avoid using the faster uvloop event loop implementation, even if
# it's installed. Useful for debugging asyncio-related issues.
disable_uvloop = true

# Whether to enable asyncio's debug mode.
# This enables several debugging checks to assist development. Examples are logging
# coroutines that are never awaited and logging long synchronous operations.
# For more information, see https://docs.python.org/3/library/asyncio-dev.html
# This should generally be disabled unless you are modifying the bot's code.
debug = true
